{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kishore/React/taxidi/src/components/posts/index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Post from \"./image/index\";\nimport feed from \"../../../assets/data/feed\";\nimport { useEffect, useState } from 'react';\nimport { listPosts } from \"../../graphql/queries\";\nimport { API, graphqlOperation } from 'aws-amplify';\n\nvar Posts = function Posts() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      sPosts = _useState2[0],\n      setsPosts = _useState2[1];\n\n  useEffect(function () {\n    var fetchPosts = function fetchPosts() {\n      var postresult;\n      return _regeneratorRuntime.async(function fetchPosts$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(listPosts)));\n\n            case 3:\n              postresult = _context.sent;\n              setsPosts(postresult.data.listPosts.items);\n              console.log(setsPosts);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0.message);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    fetchPosts();\n  }, []);\n  return React.createElement(FlatList, {\n    data: feed,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Post, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }\n  });\n};\n\nexport default Posts;","map":{"version":3,"sources":["/home/kishore/React/taxidi/src/components/posts/index.js"],"names":["React","Post","feed","useEffect","useState","listPosts","API","graphqlOperation","Posts","sPosts","setsPosts","fetchPosts","graphql","postresult","data","items","console","log","message","item"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,IAAP;AACA,OAAOC,IAAP;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,SAAQC,SAAR;AACA,SAAQC,GAAR,EAAYC,gBAAZ,QAAmC,aAAnC;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBACUJ,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,MACXK,MADW;AAAA,MACHC,SADG;;AAGlBP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEQL,GAAG,CAACM,OAAJ,CAAYL,gBAAgB,CAACF,SAAD,CAA5B,CAFR;;AAAA;AAETQ,cAAAA,UAFS;AAGfH,cAAAA,SAAS,CAACG,UAAU,CAACC,IAAX,CAAgBT,SAAhB,CAA0BU,KAA3B,CAAT;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AAJe;AAAA;;AAAA;AAAA;AAAA;AAOfM,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAIC,OAAhB;;AAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB;;AAWAP,IAAAA,UAAU;AACX,GAbQ,EAaN,EAbM,CAAT;AAcA,SAEK,oBAAC,QAAD;AACD,IAAA,IAAI,EAAET,IADL;AAGD,IAAA,UAAU,EAAE;AAAA,UAAGiB,IAAH,QAAGA,IAAH;AAAA,aAAc,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFL;AASD,CA1BD;;AA2BA,eAAeX,KAAf","sourcesContent":["import React from \"react\";\nimport { FlatList, Pressable } from \"react-native\";\nimport Post from \"./image/index\";\nimport feed from '../../../assets/data/feed'\nimport {useEffect,useState} from 'react'\nimport {listPosts} from '../../graphql/queries'\nimport {API,graphqlOperation} from 'aws-amplify'\n\n\nconst Posts = () => {\n  const [sPosts, setsPosts] = useState([])\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try{\n        const postresult=await API.graphql(graphqlOperation(listPosts))\n        setsPosts(postresult.data.listPosts.items)\n        console.log(setsPosts)\n      }\n      catch (err){\n        console.log(err.message)\n      }\n  \n    }\n    fetchPosts()\n  }, [])\n  return (\n\n       <FlatList\n      data={feed}\n      // key={feed.id}\n      renderItem={({ item }) => <Post item={item} />}\n    />\n   \n  );\n};\nexport default Posts;\n//This component renders the post that comes in the searchresult screen.Data is provided by the feed data."]},"metadata":{},"sourceType":"module"}